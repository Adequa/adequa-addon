!function(e){var t={};function n(s){if(t[s])return t[s].exports;var a=t[s]={i:s,l:!1,exports:{}};return e[s].call(a.exports,a,a.exports,n),a.l=!0,a.exports}n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var a in e)n.d(s,a,function(t){return e[t]}.bind(null,a));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t);const s={callbacks:{},nextId:1,addCallback:function(e){const t=this.nextId;return this.callbacks[this.nextId]=e,this.nextId++,t},sendMessage:function(e,t){"function"==typeof t&&(e.requestId=this.addCallback(t)),window.postMessage({direction:"adequa-tocontentscript",message:e},"*")}},a={Emitter:{},execCallback:function(e,...t){"function"==typeof this.Emitter.callbacks[e]&&this.Emitter.callbacks[e](...t),delete this.Emitter.callbacks[e]},handler:function(e){switch(e.what){case"siteViews":this.execCallback(e.requestId,e.views);break;case"consent":this.execCallback(e.requestId,e.consent);break;case"dimensions":this.execCallback(e.requestId,e.dimensions);break;case"vendorConsents":this.execCallback(e.requestId,e.vendorConsents,!0);break;case"consentData":this.execCallback(e.requestId,e.consentData,!0);break;case"settings":this.execCallback(e.requestId,e.settings);break;case"openModal":window.AdequaCmp.showCookieSettings();break;default:e.requestId&&this.execCallback(e.requestId)}},setup:function(e){this.Emitter=e,window.addEventListener("message",e=>{if(e.source===window&&e.data.direction&&"adequa-topage"===e.data.direction){const t=e.data.message;if(!t)return;this.handler(t)}})}};!function(){a.setup(s);const e={getViews:function(e){s.sendMessage({what:"getSiteViews"},e)},getConsent:function(e){s.sendMessage({what:"getConsent"},e)},getDimensions(e){s.sendMessage({what:"getDimensions"},e)}};window.Adequa=e}()}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,